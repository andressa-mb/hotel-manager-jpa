package br.com.senac.hotel.gui;

import br.com.senac.hotel.web.persistencia.QuartosDAO;
import br.com.senac.hotel.web.persistencia.ReservaDAO;
import br.com.senac.hotel.web.Models.Quartos;
import br.com.senac.hotel.web.Models.Reserva;
import br.com.senac.hotel.web.Models.Usuarios;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class TelaPrincipalHospedes extends javax.swing.JFrame {

    ReservaDAO reservaDao = new ReservaDAO();
    private List<Reserva> listaReservas = reservaDao.getReservas();
    QuartosDAO quartosDAO = new QuartosDAO();
    private List<Quartos> listaQuartos = quartosDAO.getQuartos();
    private static Usuarios usuarioLogado = TelaLogin.getUsuarioLogado();
    private Integer id;

    public TelaPrincipalHospedes(Usuarios usuario) {

        initComponents();
        this.usuarioLogado = usuario;
        preencherTabela();
        this.id = reservaDao.obterProximoId();
        lblBemVindo.setText("Bem-vindo, " + usuarioLogado.getNome());
        btnCancelar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTela1 = new javax.swing.JPanel();
        lblBemVindo = new javax.swing.JLabel();
        lblLogoh = new javax.swing.JLabel();
        pnlTelaLateral = new javax.swing.JPanel();
        btnDados = new javax.swing.JButton();
        btnMinhasReservas = new javax.swing.JButton();
        pnlBusca = new javax.swing.JPanel();
        lblCheckin = new javax.swing.JLabel();
        lblCheckout = new javax.swing.JLabel();
        txtCheckin = new javax.swing.JTextField();
        txtCheckout = new javax.swing.JTextField();
        lblCriancas = new javax.swing.JLabel();
        txtAdultos = new javax.swing.JTextField();
        lblAdultos = new javax.swing.JLabel();
        txtComodidades = new javax.swing.JTextField();
        lblDiaria = new javax.swing.JLabel();
        txtCriancas = new javax.swing.JTextField();
        sldDiaria = new javax.swing.JSlider();
        lblComodidades = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        pnlTelaMain = new javax.swing.JPanel();
        scrPane = new javax.swing.JScrollPane();
        tblLista = new javax.swing.JTable();
        btnReservar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblLogof = new javax.swing.JLabel();
        lblEndereco = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlTela1.setBackground(new java.awt.Color(194, 208, 255));

        lblBemVindo.setFont(new java.awt.Font("Perpetua", 2, 24)); // NOI18N
        lblBemVindo.setText("Bem vindo");

        lblLogoh.setText("LOGO");

        pnlTelaLateral.setBackground(new java.awt.Color(115, 129, 255));

        btnDados.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        btnDados.setText("Meus Dados");
        btnDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDadosActionPerformed(evt);
            }
        });

        btnMinhasReservas.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        btnMinhasReservas.setText("Minhas Reservas");
        btnMinhasReservas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinhasReservasActionPerformed(evt);
            }
        });

        pnlBusca.setBackground(new java.awt.Color(255, 255, 255));

        lblCheckin.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        lblCheckin.setText("Data do check-in:");

        lblCheckout.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        lblCheckout.setText("Data do check-out:");

        txtCheckin.setFont(new java.awt.Font("Perpetua", 0, 14)); // NOI18N

        txtCheckout.setFont(new java.awt.Font("Perpetua", 0, 14)); // NOI18N

        lblCriancas.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        lblCriancas.setText("Crianças:");

        txtAdultos.setFont(new java.awt.Font("Perpetua", 0, 14)); // NOI18N

        lblAdultos.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        lblAdultos.setText("Adultos:");

        txtComodidades.setFont(new java.awt.Font("Perpetua", 0, 14)); // NOI18N

        lblDiaria.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        lblDiaria.setText("Valor diária:");

        txtCriancas.setFont(new java.awt.Font("Perpetua", 0, 14)); // NOI18N

        sldDiaria.setMajorTickSpacing(50);
        sldDiaria.setMaximum(400);
        sldDiaria.setMinimum(80);
        sldDiaria.setMinorTickSpacing(20);
        sldDiaria.setPaintLabels(true);
        sldDiaria.setPaintTicks(true);

        lblComodidades.setFont(new java.awt.Font("Perpetua", 0, 18)); // NOI18N
        lblComodidades.setText("Comodidades:");

        btnBuscar.setBackground(new java.awt.Color(22, 60, 251));
        btnBuscar.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("BUSCAR");
        btnBuscar.setBorderPainted(false);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBuscaLayout = new javax.swing.GroupLayout(pnlBusca);
        pnlBusca.setLayout(pnlBuscaLayout);
        pnlBuscaLayout.setHorizontalGroup(
            pnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuscaLayout.createSequentialGroup()
                .addGroup(pnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBuscaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCriancas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlBuscaLayout.createSequentialGroup()
                                .addGroup(pnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCheckin)
                                    .addComponent(lblCheckout))
                                .addGap(0, 27, Short.MAX_VALUE))
                            .addComponent(txtCheckin)
                            .addComponent(txtCheckout)
                            .addComponent(txtAdultos)
                            .addComponent(txtComodidades)
                            .addComponent(lblAdultos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDiaria, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCriancas)
                            .addComponent(lblComodidades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(sldDiaria, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(pnlBuscaLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(btnBuscar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlBuscaLayout.setVerticalGroup(
            pnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuscaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCheckin)
                .addGap(1, 1, 1)
                .addComponent(txtCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCheckout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAdultos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAdultos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCriancas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCriancas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblComodidades)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtComodidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(lblDiaria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sldDiaria, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscar)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlTelaLateralLayout = new javax.swing.GroupLayout(pnlTelaLateral);
        pnlTelaLateral.setLayout(pnlTelaLateralLayout);
        pnlTelaLateralLayout.setHorizontalGroup(
            pnlTelaLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTelaLateralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTelaLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDados, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMinhasReservas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlTelaLateralLayout.createSequentialGroup()
                        .addComponent(pnlBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlTelaLateralLayout.setVerticalGroup(
            pnlTelaLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTelaLateralLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMinhasReservas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBusca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlTelaMain.setBackground(new java.awt.Color(115, 129, 255));

        tblLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Número", "Tipo", "Valor Diária", "Comodidades"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrPane.setViewportView(tblLista);

        btnReservar.setBackground(new java.awt.Color(22, 60, 251));
        btnReservar.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        btnReservar.setForeground(new java.awt.Color(255, 255, 255));
        btnReservar.setText("RESERVAR");
        btnReservar.setBorderPainted(false);
        btnReservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservarActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(22, 60, 251));
        btnCancelar.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("CANCELAR RESERVA");
        btnCancelar.setBorderPainted(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTelaMainLayout = new javax.swing.GroupLayout(pnlTelaMain);
        pnlTelaMain.setLayout(pnlTelaMainLayout);
        pnlTelaMainLayout.setHorizontalGroup(
            pnlTelaMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTelaMainLayout.createSequentialGroup()
                .addGroup(pnlTelaMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTelaMainLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scrPane))
                    .addGroup(pnlTelaMainLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(btnReservar)
                        .addGap(344, 344, 344)
                        .addComponent(btnCancelar)
                        .addGap(0, 31, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlTelaMainLayout.setVerticalGroup(
            pnlTelaMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTelaMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrPane, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(pnlTelaMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnReservar))
                .addGap(22, 22, 22))
        );

        lblLogof.setText("LOGO");

        lblEndereco.setFont(new java.awt.Font("Perpetua", 2, 24)); // NOI18N
        lblEndereco.setText("ENDEREÇO");

        javax.swing.GroupLayout pnlTela1Layout = new javax.swing.GroupLayout(pnlTela1);
        pnlTela1.setLayout(pnlTela1Layout);
        pnlTela1Layout.setHorizontalGroup(
            pnlTela1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTela1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(lblLogoh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 614, Short.MAX_VALUE)
                .addComponent(lblBemVindo)
                .addGap(141, 141, 141))
            .addGroup(pnlTela1Layout.createSequentialGroup()
                .addComponent(pnlTelaLateral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTelaMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTela1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(lblLogof)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblEndereco)
                .addGap(59, 59, 59))
        );
        pnlTela1Layout.setVerticalGroup(
            pnlTela1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTela1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlTela1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBemVindo)
                    .addComponent(lblLogoh))
                .addGap(29, 29, 29)
                .addGroup(pnlTela1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlTelaLateral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTelaMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlTela1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLogof)
                    .addComponent(lblEndereco))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTela1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTela1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try {
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate localDateIn = LocalDate.parse(txtCheckin.getText(), formatter);
            LocalDate localDateOut = LocalDate.parse(txtCheckout.getText(), formatter);

            int adultos = Integer.parseInt(txtAdultos.getText());
            int criancas = Integer.parseInt(txtCriancas.getText().isEmpty() ? "0" : txtCriancas.getText());
            String comodidades = txtComodidades.getText();
            int valorMaximo = sldDiaria.getValue();

            List<Quartos> quartosFiltrados = quartosDAO.filtrarQuartos(adultos, criancas, valorMaximo, localDateIn, localDateOut);

            if (quartosFiltrados.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Nenhum quarto disponível para os filtros informados.");

            } else {
                preencherTabelaDisponivel(quartosFiltrados);
            }
            btnCancelar.setEnabled(false);
            btnReservar.setEnabled(true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao processar a busca: " + e.getMessage(), "Erro ", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    public void preencherTabela() {
        DefaultTableModel tabela = (DefaultTableModel) tblLista.getModel();
        tabela.setRowCount(0);

        for (Quartos qt : listaQuartos) {
            if (qt.getDisponivel()) {
                tabela.addRow(new Object[]{
                    qt.getId(),
                    qt.getNumero(),
                    qt.getTipo(),
                    qt.getValor_diaria(),
                    qt.getComodidades()
                });
            }
        }
    }

    public void preencherTabelaDisponivel(List<Quartos> quartosFiltrados) {
        String colunas[] = {"Id", "Número", "Tipo", "Valor diária", "Comodidades"};
        DefaultTableModel tabela = new DefaultTableModel(colunas, 0);

        for (Quartos qt : quartosFiltrados) {
            tabela.addRow(new Object[]{
                qt.getId(),
                qt.getNumero(),
                qt.getTipo(),
                qt.getValor_diaria(),
                qt.getComodidades()
            });
        }

        tblLista.setModel(tabela);
    }

    private void btnDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDadosActionPerformed
        if (usuarioLogado != null) {
            TelaDados telaDados = new TelaDados(usuarioLogado);
            telaDados.setVisible(true);
            telaDados.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

            telaDados.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent we) {
                    Usuarios usuarioAtualizado = telaDados.getUsuarioAtualizado();
                    if (usuarioAtualizado != null) {
                        usuarioLogado = usuarioAtualizado;
                        lblBemVindo.setText("Bem-vindo, " + usuarioLogado.getNome());
                    }
                }
            });

        } else {
            JOptionPane.showMessageDialog(this, "Nenhum usuário está logado!",
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnDadosActionPerformed

    private void btnReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservarActionPerformed
        try {
            int linhaSelecionada = tblLista.getSelectedRow();
            //int idReserva = (int) tblLista.getValueAt(linhaSelecionada, 0);

            if (txtCheckin.getText().isEmpty() || txtCheckout.getText().isEmpty() || linhaSelecionada == -1) {
                JOptionPane.showMessageDialog(this, "Por favor, preencha as dados do filtro de busca ou selecione uma linha.",
                        "Sem dados na busca", JOptionPane.WARNING_MESSAGE);
            } else if (linhaSelecionada >= 0) {
                DefaultTableModel tabela = (DefaultTableModel) tblLista.getModel();
                int quartoId = (int) tblLista.getValueAt(linhaSelecionada, 0);

                Quartos quartoSelecionado = null;
                for (Quartos q : listaQuartos) {
                    if (q.getId() == quartoId) {
                        quartoSelecionado = q;
                        break;
                    }
                }
                if (quartoSelecionado != null) {
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                    LocalDate localDateIn = LocalDate.parse(txtCheckin.getText(), formatter);
                    LocalDate localDateOut = LocalDate.parse(txtCheckout.getText(), formatter);
                    int hospedeId = usuarioLogado.getId();

                    Reserva novaReserva = new Reserva(this.id, hospedeId, quartoId, localDateIn, localDateOut, null, 2, "Dinheiro");
                    reservaDao.cadastrar(novaReserva);
                    JOptionPane.showMessageDialog(this, "Reserva registrada com sucesso!\nQuarto número: " + quartoSelecionado.getNumero());
                    limparDados();
                } else {
                    JOptionPane.showMessageDialog(this, "Por favor, selecione um quarto para reservar.",
                            "Nenhuma Seleção", JOptionPane.WARNING_MESSAGE);
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao realizar a reserva. " + e.getMessage());
        }
    }//GEN-LAST:event_btnReservarActionPerformed

    private void btnMinhasReservasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinhasReservasActionPerformed

        try {
            List<Reserva> reservaDoUsuario = reservaDao.getReservasUsuario(usuarioLogado.getId());

            if (reservaDoUsuario == null || reservaDoUsuario.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nenhuma reserva encontrada para o usuário.",
                        "Aviso", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            String colunas[] = {"ID Reserva", "ID Hospede", "ID Quarto", "Check-in", "Check-out", "Status", "Pagamento"};
            String dados[][] = new String[reservaDoUsuario.size()][colunas.length];
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");

            int i = 0;
            for (Reserva reserva : reservaDoUsuario) {
                dados[i] = new String[]{
                    String.valueOf(reserva.getId()),
                    String.valueOf(reserva.getHospedeId()),
                    String.valueOf(reserva.getQuartoId()),
                    reserva.getDataCheckin().format(formatter),
                    reserva.getDataPrevCheckout().format(formatter),
                    String.valueOf(reserva.getStatus()),
                    reserva.getDetalhesPagamento()
                };
                i++;
            }

            DefaultTableModel tabela = new DefaultTableModel(dados, colunas);
            tblLista.setModel(tabela);
            btnReservar.setEnabled(false);
            btnCancelar.setEnabled(true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao buscar reservas! " + e.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnMinhasReservasActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        try {
            int linhaSelecionada = tblLista.getSelectedRow();
            if (linhaSelecionada >= 0) {
                int idReserva = Integer.parseInt((String) tblLista.getValueAt(linhaSelecionada, 0));
                Reserva reservaSelecionada = null;
                for (Reserva r : listaReservas) {
                    if (r.getId() == idReserva) {
                        reservaSelecionada = r;
                        break;
                    }
                }

                LocalDate dataCheckin = reservaSelecionada.getDataCheckin();
                LocalDate dataAtual = LocalDate.now();

                if (dataCheckin.isAfter(dataAtual)) {
                    int resposta = JOptionPane.showConfirmDialog(this, "Deseja mesmo excluir a reserva de ID " + idReserva + "?", "Confirmação", JOptionPane.YES_NO_OPTION);
                    if (resposta == JOptionPane.YES_OPTION) {

                        for (Quartos q : listaQuartos) {
                            if (q.getId() == reservaSelecionada.getQuartoId()) {
                                q.setDisponivel(true);
                                break;
                            }
                        }

                        int idReservaSelecionada = reservaSelecionada.getId();
                        reservaDao.excluirReserva(idReservaSelecionada);
                        listaReservas.removeIf(r -> r.getId() == idReserva);
                        preencherTabela();

                        JOptionPane.showMessageDialog(this, "Reserva cancelada com sucesso!");
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "Não é possível cancelar reservas com data de check-in igual ou anterior à data atual.",
                            "Erro", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(this, "Selecione uma reserva para cancelar.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao cancelar reserva. " + e.getMessage());
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    public void limparDados() {
        txtCheckin.setText("");
        txtCheckout.setText("");
        txtAdultos.setText("");
        txtCriancas.setText("");
        txtComodidades.setText("");
        sldDiaria.setValue(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipalHospedes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipalHospedes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipalHospedes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipalHospedes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipalHospedes(usuarioLogado).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnDados;
    private javax.swing.JButton btnMinhasReservas;
    private javax.swing.JButton btnReservar;
    private javax.swing.JLabel lblAdultos;
    private javax.swing.JLabel lblBemVindo;
    private javax.swing.JLabel lblCheckin;
    private javax.swing.JLabel lblCheckout;
    private javax.swing.JLabel lblComodidades;
    private javax.swing.JLabel lblCriancas;
    private javax.swing.JLabel lblDiaria;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblLogof;
    private javax.swing.JLabel lblLogoh;
    private javax.swing.JPanel pnlBusca;
    private javax.swing.JPanel pnlTela1;
    private javax.swing.JPanel pnlTelaLateral;
    private javax.swing.JPanel pnlTelaMain;
    private javax.swing.JScrollPane scrPane;
    private javax.swing.JSlider sldDiaria;
    private javax.swing.JTable tblLista;
    private javax.swing.JTextField txtAdultos;
    private javax.swing.JTextField txtCheckin;
    private javax.swing.JTextField txtCheckout;
    private javax.swing.JTextField txtComodidades;
    private javax.swing.JTextField txtCriancas;
    // End of variables declaration//GEN-END:variables
}
